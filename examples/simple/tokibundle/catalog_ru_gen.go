// Generated by github.com/romshark/toki. DO NOT EDIT.

package tokibundle

import (
	"fmt"
	"io"
	"time"

	locales "github.com/go-playground/locales"
	locale "github.com/go-playground/locales/ru"
	language "golang.org/x/text/language"
)

// This prevents the "imported and not used" error when some features are not used.
var (
	_ fmt.Formatter = nil
	_ time.Time

	tr_ru  = locale.New()
	loc_ru = language.MustParse("ru")
)

type catalog_ru struct{}

var writers_ru = map[string]func(w io.Writer, args ...any) (int, error){
	msg62489e1e07578e6e: nil,
	msg6aa44c2f549ae5e8: func(w io.Writer, args ...any) (written int, err error) {
		return wrs(w, "переведённый текст")
	},
	msgd2497314df5ae7e6: nil,
	msgdc0a1830b671625c: nil,
	msgf5b4499f95971294: nil,
}

func (catalog_ru) Locale() language.Tag { return loc_ru }

func (catalog_ru) Translator() locales.Translator { return tr_ru }

func (catalog_ru) String(tik string, args ...any) string {
	b := poolBufGet()
	defer poolBufPut(b)
	f := writers_ru[tik]
	if f == nil {
		_, _ = MissingTranslation(b, loc_ru, tik, args...)
	} else {
		_, _ = f(b, args...)
	}
	return b.String()
}

func (catalog_ru) Write(
	writer io.Writer, tik string, args ...any,
) (written int, err error) {
	f := writers_ru[tik]
	if f == nil {
		return MissingTranslation(writer, loc_ru, tik, args...)
	}
	return f(writer, args...)
}
